<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2bc4c8d8-5cd6-4e87-91da-61b47eb9a9c1" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/part2/src/routes/greetings.rs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="RsBuildProfile:dev" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Rust File" />
        <option value="HTTP Request" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="exqm9mf4" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2mU9qKUAdaltkQU4ASaL4tzIX45" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Cargo.Run rust-api.executor": "Run",
    "HTTP Request.All in greetings.executor": "Run",
    "HTTP Request.greetings | #2.executor": "Run",
    "HTTP Request.greetings | GET Hello World.executor": "Run",
    "HTTP Request.greetings | GET base request.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.rust.reset.selective.auto.import": "true",
    "git-widget-placeholder": "main",
    "last_opened_file_path": "/home/gary/Documents/threenine/tutorials/rust/rust-api/part2",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "org.rust.cargo.project.model.PROJECT_DISCOVERY": "true",
    "org.rust.cargo.project.model.impl.CargoExternalSystemProjectAware.subscribe.first.balloon": "",
    "org.rust.disableDetachedFileInspection/home/gary/Documents/threenine/tutorials/rust-api/src/routes/hello/hello.rs": "true",
    "org.rust.first.attach.projects": "true",
    "rest.client.default.execution.environment": "local",
    "settings.editor.selected.configurable": "language.rust.cargo.check",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/routes" />
      <recent name="$PROJECT_DIR$/src/routes/greetings" />
    </key>
  </component>
  <component name="RsExternalLinterProjectSettings">
    <option name="runOnTheFly" value="true" />
  </component>
  <component name="RunManager" selected="Cargo.Run rust-api">
    <configuration name="Run rust-api" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="buildProfileId" value="dev" />
      <option name="command" value="run --package rust-api --bin rust-api" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test rust-api" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="test --workspace" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="All in greetings" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" path="$PROJECT_DIR$/tests/greetings.http">
      <method v="2" />
    </configuration>
    <configuration name="greetings | GET Hello World" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/tests/greetings.http" requestIdentifier="GET Hello World" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="greetings | GET base request" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/tests/greetings.http" requestIdentifier="GET base request" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="greetings | #2" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/tests/greetings.http" index="2" requestIdentifier="#2" runType="Run single request">
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.greetings | GET Hello World" />
        <item itemvalue="HTTP Request.greetings | GET base request" />
        <item itemvalue="HTTP Request.All in greetings" />
        <item itemvalue="HTTP Request.greetings | #2" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2bc4c8d8-5cd6-4e87-91da-61b47eb9a9c1" name="Changes" comment="" />
      <created>1727120476482</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1727120476482</updated>
      <workItem from="1727120477516" duration="2947000" />
      <workItem from="1727126431109" duration="8478000" />
      <workItem from="1727201150884" duration="707000" />
      <workItem from="1727258776497" duration="374000" />
      <workItem from="1727259318356" duration="648000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>